@model IEnumerable<Models.Models.Room>

@{
    ViewData["Title"] = "Available Rooms";
}

<h1 class="my-4">Available Rooms</h1>

@if (Model.Any())
{
    // Group rooms by RoomType.Type and distinct combinations of PricePN and MealPrice
    var distinctRooms = Model
        .GroupBy(room => room.RoomType.Type)
        .SelectMany(group => group.GroupBy(r => new { r.RoomType.PricePN, r.RoomType.MealPrice })
                                  .Select(g => g.First()));

    <div class="row">
        @foreach (var room in distinctRooms)
        {
            <div class="col-md-4 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Room Type: @room.RoomType.Type</h5>
                        <p class="card-text">Price per night: <strong>@room.RoomType.PricePN EGP</strong></p>
                        <p class="card-text">
                            Meal Price: <strong>@(room.RoomType.MealPrice?.ToString() ?? "Not available")</strong>
                        </p>

                        <form asp-controller="Booking" asp-action="Book" method="get">
                            <input type="hidden" name="HotelId" value="@room.HotelId" />
                            <input type="hidden" name="RoomType" value="@room.RoomType.Type" />
                            <input type="hidden" name="PricePN" value="@room.RoomType.PricePN" />
                            <input type="hidden" name="MealPrice" value="@room.RoomType.MealPrice" />

                            <button type="submit" class="btn btn-primary">Book Now</button>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="alert alert-warning" role="alert">
        No rooms available matching your requirements. Please try adjusting your search criteria.
    </div>
}
