@model Hotel
@{
    ICollection<Comment> comments = ViewBag.Comment;
}
<style>
    /* Details Page Styles */
    .hotel-details {
        margin-top: 30px;
        text-align: center;
    }

        .hotel-details h1 {
            font-size: 3rem;
            font-weight: bold;
            color: #007bff;
        }

        .hotel-details p {
            font-size: 1.25rem;
            color: #555;
            margin-bottom: 20px;
        }

    .main-img {
        width: 100%;
        height: 400px;
        object-fit: cover;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .thumbnail-img {
        cursor: pointer;
        transition: transform 0.3s;
    }

        .thumbnail-img:hover {
            transform: scale(1.1);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

    .booking-form {
        margin-top: 20px;
        max-width: 500px;
        margin: 0 auto;
    }

</style>
<style>
    .form-floating textarea {
        height: 150px;
        resize: none;
    }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
        transition: background-color 0.3s ease, border-color 0.3s ease;
    }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #004085;
        }

    .comment-form {
        background: #f8f9fa;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .form-floating label {
        color: #6c757d;
    }
</style>
<style>

    body {
        font-family: 'Roboto', sans-serif;
        background-color: #f7f9fc;
        color: #333;
    }

    .hero-section {
        background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.7)), url('@Url.Content("~/images/homeImage/" + Model.CoverImg)') no-repeat center center/cover;
        color: #fff;
        border-radius: 10px;
        padding: 60px 20px;
        text-align: center;
        margin-top: 0px;
    }

        .hero-section h1 {
            font-size: 3.5rem;
            font-weight: bold;
        }

        .hero-section p {
            font-size: 1.25rem;
            margin-top: 15px;
        }

    .image-gallery {
        margin-top: 30px;
        padding: 20px;
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .carousel img {
        border-radius: 8px;
        height: 500px;
        object-fit: cover;
    }

    .booking-form {
        background: #ffffff;
        padding: 20px;
        margin-top: 30px;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

        .booking-form label {
            font-weight: bold;
        }

    .comment-item {
        display: flex;
        align-items: flex-start;
        margin-top: 20px;
    }

        .comment-item img {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            margin-right: 15px;
        }

        .comment-item .comment-content {
            flex-grow: 1;
            background: #f1f3f5;
            padding: 15px;
            border-radius: 8px;
        }

            .comment-item .comment-content h5 {
                margin: 0;
                font-weight: bold;
            }

</style>
<div class="image-gallery container " style="padding:10px;">
    <div class="hero-section">
        <h1>@Model.Name</h1>
        <p>@Model.Description</p>
        <p>
            Stars:
            @for (int i = 0; i < Model.Stars; i++)
            {
                <i class="bi bi-star-fill" style="color: gold;"></i>
            }
        </p>
        <p class="card-text">
            @if (Model.HotelAmenities.Any())
            {
                @foreach (var amenity in Model.HotelAmenities)
                {
                    <span class="badge text-black" style="color:#fff;filter: invert(100%) brightness(2) contrast(100%);border:2px solid;font-size:1rem"><img src="~/images/amenities/@amenity.Amenity.Img" style="height:25px;" alt="Alternate Text" />&ensp;@amenity.Amenity.Name</span>
                }
            }
            else
            {
                <span>No amenities available</span>
            }
        </p>
        
    </div>
</div>

<!-- Image Gallery -->
<div class="image-gallery container mt-5">
    <div id="hotelCarousel" class="carousel slide" data-bs-ride="carousel">
        <div class="carousel-inner">
            <div class="carousel-item active">
                <img src="~/images/homeImage/@Model.CoverImg" class="d-block w-100" alt="Hotel Cover Image">
            </div>
            @foreach (var img in Model.ImageLists)
            {
                <div class="carousel-item">
                    <img src="~/images/subImage/@Model.Name/@img.ImgUrl" class="d-block w-100" alt="Hotel Image">
                </div>
            }
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#hotelCarousel" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#hotelCarousel" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </button>
    </div>
</div>


<!-- Booking Section -->
<div class="container booking-form">
    <h3>Book a Room</h3>
    <form asp-controller="Booking" asp-action="Filter" method="get">
        <input type="hidden" name="HotelId" value="@Model.Id" />
        <div class="mb-3">
            <label for="roomType">Room Type:</label>
            <select id="roomType" name="RoomType" class="form-control">
                <option value="Single">Single</option>
                <option value="Double">Double</option>
                <option value="Triple">Triple</option>
                <option value="Quadruple">Quadruple</option>
            </select>
        </div>
        <button type="submit" class="btn btn-primary">Search for Rooms</button>
    </form>
</div>

<div class="container mt-5">
    <h3 class="mt-4 text-primary">Comments</h3>
    <hr />
    <form asp-action="AddComment" method="get" class="mb-4">
        <input type="hidden" name="hotelId" value="@Model.Id" />

        <div class="form-floating mb-3">
            <textarea name="comment" class="form-control" placeholder="Leave a comment here" id="floatingTextarea" maxlength="500" required></textarea>
            <label for="floatingTextarea">Leave a comment here</label>
        </div>

        <div class="d-grid gap-2">
            <button type="submit" class="btn btn-primary btn-lg">Submit Comment</button>
        </div>
    </form>


    <hr style="color:#fff;" />
    <div class="comments-section">
        @foreach (var comment in comments)
        {
            <partial>
                @Html.Partial("_CommentPartial", comment)
            </partial>
        }
    </div>

</div>







<script>
    function changeMainImage(src) {
        document.getElementById('mainImage').src = src;
    }
</script>
<script>
    function updateChildAgeInputs() {
        const numberOfChildren = document.getElementById("children").value;
        const childAgesContainer = document.getElementById("childAgesContainer");
        childAgesContainer.innerHTML = "";  // Clear existing inputs

        for (let i = 0; i < numberOfChildren; i++) {
            const input = document.createElement("input");
            input.type = "number";
            input.name = `ChildrenAge[${i}]`;  // Update input name to match the List<int> property
            input.placeholder = `Age of Child ${i+1}`;
            input.className = "form-control";
            input.required = true;
            childAgesContainer.appendChild(input);
        }
    }
</script>

<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>