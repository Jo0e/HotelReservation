@using Models.Models
@model Hotel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    h1 {
        font-size: 2rem;
        margin-bottom: 1rem;
        color: #007bff;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .btn-primary {
        background-color: #007bff;
        border: none;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }
</style>

<h1>Create a New Hotel</h1>
<h4>Hotel</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="Create" enctype="multipart/form-data" id="createHotelForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control" rows="4"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="City" class="control-label"></label>
                <input asp-for="City" class="form-control" />
                <span asp-validation-for="City" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Stars" class="control-label"></label>
                <input asp-for="Stars" class="form-control" />
                <span asp-validation-for="Stars" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="CoverImg" class="control-label"></label>
                <input asp-for="CoverImg" class="form-control" type="file" name="ImgFile" />
                <span asp-validation-for="CoverImg" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-for="CompanyId" class="form-control" type="hidden" value="@ViewData["CompanyId"]" />
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Create</button>
                <a asp-action="Index" class="btn btn-secondary">Cancel</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.15/signalr.min.js"></script>
    <script>
        // Establish SignalR connection
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/hotelHub")
            .build();

        connection.start().then(() => {
            console.log("Connected to SignalR hub");
        }).catch(function (err) {
            console.error("SignalR connection error: " + err.toString());
        });

        // Listen for HotelCreated event
        connection.on("HotelCreated", function (hotel) {
            const successMessage = `Hotel "${hotel.name}" has been created successfully!`;
            alert(successMessage);

            // Optionally, update a list or UI in real time
            console.log(hotel);
        });

        // Form submission
        const createHotelForm = document.getElementById("createHotelForm");
        createHotelForm.addEventListener("submit", function (e) {
            e.preventDefault();

            // Submit form data via AJAX (Optional)
            const formData = new FormData(createHotelForm);

            fetch('/Company/Hotels/Create', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("Hotel created successfully!");
                    connection.invoke("NotifyClients", data.hotel); // Notify other clients
                } else {
                    alert("Error: " + data.message);
                }
            })
            .catch(error => {
                console.error("Error while creating hotel:", error);
            });
        });
    </script>
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
