@using Models.Models
@model IEnumerable<Room>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        font-family: 'Roboto', sans-serif;
        background-color: #f8f9fa;
        margin: 0;
        padding: 0;
    }

    h1 {
        color: #007bff;
        font-size: 2.5rem;
        text-align: center;
        margin-top: 20px;
    }

    .justify-content-between {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding: 0 20px;
    }

        .justify-content-between a {
            padding: 10px 20px;
            border-radius: 5px;
            background-color: #007bff;
            color: #fff;
            text-decoration: none;
            font-weight: 500;
            transition: background-color 0.3s ease;
        }

            .justify-content-between a:hover {
                background-color: #0056b3;
            }

    label {
        font-weight: bold;
        margin: 20px;
        display: block;
    }

    select {
        padding: 8px 12px;
        border: 1px solid #ced4da;
        border-radius: 5px;
        font-size: 1rem;
        margin: 0 20px;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        margin: 20px 0;
        background-color: #fff;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        overflow: hidden;
    }

    th, td {
        padding: 16px;
        text-align: center;
        border-bottom: 1px solid #e0e0e0;
        font-size: 1rem;
    }

    th {
        background-color: #f1f3f5;
        font-weight: bold;
        color: #495057;
    }

    tr:hover {
        background-color: #f8f9fa;
    }

    td[colspan="5"] {
        font-size: 1.1rem;
        text-align: center;
        color: #6c757d;
        font-weight: bold;
        padding: 20px;
    }

    a {
        padding: 8px 16px;
        border-radius: 5px;
        font-size: 0.9rem;
        text-decoration: none;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

    .btn-book {
        background-color: #28a745;
        color: #fff;
        font-weight: bold;
    }

        .btn-book:hover {
            background-color: #218838;
            color: #212529;
        }

    .btn-unbook {
        background-color: #dc3545;
        color: #fff;
        font-weight: bold;
    }

        .btn-unbook:hover {
            background-color: #c82333;
            color: #fff;
        }

    .btn-delete {
        background-color: #ffc107;
        color: #212529;
        font-weight: bold;
    }

        .btn-delete:hover {
            background-color: #e0a800;
            color: #fff;
        }

   
</style>

<h1>@Model.Select(e=>e.Hotel.Name).FirstOrDefault()</h1>
<h1>Rooms</h1>

<p>
    <div class="justify-content-between">
        <a asp-action="Create" asp-route-hotelId="@ViewBag.HotelId">Create New</a>
        <a asp-controller="RoomType" asp-action="Index" asp-route-hotelId="@ViewBag.HotelId">Create Type</a>
    </div>
</p>

<div>
    <label for="roomTypeFilter">Filter by Room Type:</label>
    <select id="roomTypeFilter" onchange="filterRooms()">
        <option value="All">All</option>
        <option value="Single">Single</option>
        <option value="Double">Double</option>
        <option value="Triple">Triple</option>
        <option value="Quadruple">Quadruple</option>
    </select>
</div>

<table class="table" id="roomsTable">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Id)</th>
            <th>Is Reserved</th>
            
            <th>@Html.DisplayNameFor(model => model.RoomType)</th>
            <th>@Html.DisplayNameFor(model => model.RoomType.PricePN)</th>
            <th>@Html.DisplayNameFor(model => model.RoomType.MealPrice)</th>
            <th>@Html.DisplayNameFor(model => model.RoomType.MaxPersons)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr data-room-type="@item.RoomType.Type">
                <td>Room ID: @Html.DisplayFor(modelItem => item.Id)</td>
                <td>@Html.DisplayFor(modelItem => item.IsAvailable)</td>
                <td>@Html.DisplayFor(modelItem => item.RoomType.Type)</td>
                <td>@item.RoomType.PricePN.ToString("C")</td>
                <td>
                    @(item.RoomType.MealPrice.HasValue ? item.RoomType.MealPrice.Value.ToString("C") : "No Meal Available")
                </td>
                <td>@Html.DisplayFor(modelItem => item.RoomType.MaxPersons)</td>
                <td>
                    @if (item.IsAvailable)
                    {
                        <a asp-action="Book" asp-route-id="@item.Id" class="btn-book"><i class="bi bi-journal-check"></i> Book</a>
                    }
                    @if (!item.IsAvailable)
                    {
                        <a asp-action="Book" asp-route-id="@item.Id" class="btn-delete"><i class="bi bi-journal-x"></i> UnBook</a>
                    }
                    |
                    <a href="javascript:void(0);" class="btn-unbook" data-bs-toggle="modal" data-bs-target="#deleteModal" data-room-id="@item.Id">
                        <i class="bi bi-trash3"></i> Delete
                    </a>
                </td>

            </tr>
        }
    </tbody>
</table>


<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this room?
            </div>
            <div class="modal-footer">
                <form id="deleteForm" method="post" action="">
                    <input type="hidden" id="deleteRoomId" name="id" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    var deleteModal = document.getElementById('deleteModal');
    deleteModal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget; // Button that triggered the modal
        var roomId = button.getAttribute('data-room-id'); // Extract room ID from data-* attributes
        var form = deleteModal.querySelector('#deleteForm');
        form.action = '@Url.Action("Delete", "Room")/' + roomId; // Set form action to delete the specific room
        var input = form.querySelector('#deleteRoomId');
        input.value = roomId; // Update hidden input with the room ID
    });
</script>


<script>
    function filterRooms() {
        const selectedType = document.getElementById("roomTypeFilter").value;
        const rows = document.querySelectorAll("#roomsTable tbody tr");

        rows.forEach(row => {
            const roomType = row.getAttribute("data-room-type");
            if (selectedType === "All" || roomType === selectedType) {
                row.style.display = "";
            } else {
                row.style.display = "none";
            }
        });
    }
</script>

