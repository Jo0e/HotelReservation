@using Models.Models
@model Room

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ICollection<RoomType> roomTypes = ViewBag.Type;

}

<h1>Create</h1>

<h4>Room</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" type="hidden" value="true" asp-for="IsAvailable" />
                </label>
            </div>
            <input type="hidden" name="HotelId" value="@ViewBag.HotelId">


            <label asp-for="RoomTypeId" class="control-label"></label>
            <select class="form-select" name="RoomTypeId" required>
                <option selected disabled hidden>Open this select menu</option>
                @foreach (var item in roomTypes)
                {
                    <option value="@item.Id">@item.Type -PricePN: @item.PricePN -Meal: @item.MealPrice</option>
                }
            </select>

            <div class="form-group">
            <label class="control-label">Numbers of rooms to create</label>
                <input class="input-group form-control" type="number" min="1" name="count" />
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
