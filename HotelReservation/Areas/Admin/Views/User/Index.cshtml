@using Models.ViewModels
@model IEnumerable<UserViewModel>
<br />
<h2>Users</h2>
<br />
<form class="d-flex mb-4" id="searchForm" method="get" asp-action="Index">
    <input class="form-control me-sm-2"
           type="search"
           placeholder="Search by UserName or Email or Phone Number or Roles "
           value="@ViewBag.searchText"
           name="search" />
    <button class="btn btn-secondary my-2 my-sm-0" type="submit">Search</button>
</form>
<table class="table">
    <thead>
        <tr>
            <th>UserName</th>
            <th>Email</th>
            <th>Phone Number</th>
            <th>Roles</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var userViewModel in Model)
        {
            <tr>
                <td>@userViewModel.User.UserName</td>
                <td>@userViewModel.User.Email</td>
                <td>@userViewModel.User.PhoneNumber</td>

                <td>
                    @foreach (var role in userViewModel.Roles)
                    {
                        <span>@role</span>

                        <br />
                    }
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@userViewModel.User.Id" class="btn btn-primary btn-sm">
                        <i class="fas fa-pencil-square"></i> Edit
                    </a>
                    @if (userViewModel.User.LockoutEnd > DateTime.Now)
                    {
                        <a asp-action="Lockout" asp-route-id="@userViewModel.User.Id" class="btn btn-warning btn-sm">
                            <i class="fas fa-edit"></i> UnLockout
                        </a>
                    }
                    @if (userViewModel.User.LockoutEnd <= DateTime.Now || userViewModel.User.LockoutEnd == null)
                    {
                    <a asp-action="Lockout" asp-route-id="@userViewModel.User.Id" class="btn btn-warning btn-sm">
                        <i class="fas fa-edit"></i> Lockout
                    </a>
                    }
                    <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal"
                            data-userid="@userViewModel.User.Id" data-username="@userViewModel.User.UserName">
                        <i class="bi bi-trash3"></i> Delete User
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Page navigation example" class="mt-5">
    <ul class="pagination justify-content-center">
        @for (var i = 1; i <= Math.Ceiling((double)ViewBag.TotalItems / ViewBag.PageSize); i++)
        {
            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                <a class="page-link pagination-link" asp-action="Index" asp-route-search="@ViewBag.searchText" asp-route-pageNumber="@i" asp-route-pageSize="@ViewBag.PageSize">@i</a>
            </li>
        }
    </ul>
</nav>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="deleteForm" method="post">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete the user <strong id="deleteUserName"></strong>?</p>
                    <input type="hidden" id="deleteUserId" name="id" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
    const deleteModal = document.getElementById('deleteModal');
    deleteModal.addEventListener('show.bs.modal', function (event) {
        const button = event.relatedTarget; // Button that triggered the modal
        const userId = button.getAttribute('data-userid');
        const userName = button.getAttribute('data-username');

        // Update modal content
        const deleteUserName = deleteModal.querySelector('#deleteUserName');
        const deleteUserId = deleteModal.querySelector('#deleteUserId');

        deleteUserName.textContent = userName;
        deleteUserId.value = userId;

        // Set form action dynamically
        const deleteForm = deleteModal.querySelector('#deleteForm');
        deleteForm.action = '@Url.Action("Delete", "User", new { area = "Admin" })';
    });
</script>
