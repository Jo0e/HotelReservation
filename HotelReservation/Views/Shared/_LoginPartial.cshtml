@using Microsoft.AspNetCore.Identity
@using Models.Models

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager


@if (SignInManager.IsSignedIn(User))
{
    var user = await UserManager.GetUserAsync(User);
    var appUser = user as ApplicationUser;
    var profileImagePath = appUser?.ProfileImage ?? "default-profile.png";

    <div class="profile-container d-flex align-items-center bg-light px-3 py-2 rounded shadow-sm">
        <img src="~/images/profile/@user.Email/@profileImagePath"
             class="profile-image rounded-circle me-3"
             alt="@UserManager.GetUserName(User)"
             data-bs-toggle="tooltip"
             title="View your profile" />

        <div class="profile-details">
            <h6 class="mb-1 text-primary">Welcome, @UserManager.GetUserName(User).Split('@')[0]!</h6>
            <div>
                <a id="manage" class="btn btn-outline-primary btn-sm me-2"
                   asp-area="Identity"
                   asp-page="/Account/Manage/Index"
                   title="Manage Account">
                    Manage Account
                </a>
                <form id="logoutForm" class="d-inline-block"
                      asp-area="Identity"
                      asp-page="/Account/Logout"
                      asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button id="logout" type="submit" class="btn btn-outline-danger btn-sm">
                        Logout
                    </button>
                </form>
            </div>
        </div>
    </div>
}
else
{
    <div class="auth-links d-flex align-items-center">
        <a class="btn btn-primary me-2" id="register"
           asp-area="Identity"
           asp-page="/Account/Register">
            Register
        </a>
        <a class="btn btn-secondary me-2" id="login"
           asp-area="Identity"
           asp-page="/Account/Login">
            Login
        </a>
    </div>
}
<style>
    /* Profile container styling */
    .profile-container {
        background-color: #f8f9fa;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        display: flex;
        align-items: center;
    }

    /* Profile image styling */
    .profile-image {
        width: 45px;
        height: 45px;
        object-fit: cover;
        border: 2px solid #007bff;
    }

    /* Profile details */
    .profile-details h6 {
        margin: 0;
        font-size: 1rem;
        font-weight: bold;
    }

    .profile-details .btn {
        font-size: 0.85rem;
        padding: 5px 10px;
    }

    /* Auth links */
    .auth-links .btn {
        padding: 5px 15px;
        font-size: 0.9rem;
    }

    .btn-outline-primary {
        color: #007bff;
        border-color: #007bff;
    }

        .btn-outline-primary:hover {
            background-color: #007bff;
            color: #fff;
        }

    .btn-outline-danger {
        color: #dc3545;
        border-color: #dc3545;
    }

        .btn-outline-danger:hover {
            background-color: #dc3545;
            color: #fff;
        }


</style>
<script>
    // Initialize tooltips
    document.addEventListener("DOMContentLoaded", function () {
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        tooltipTriggerList.forEach(function (tooltipTriggerEl) {
            new bootstrap.Tooltip(tooltipTriggerEl);
        });
    });

</script>
